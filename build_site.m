function build_site()
% Build a simple docs website (HTML files) using only MATLAB.
% Writes into ./docs

clc; close all;
outDir  = fullfile(pwd,'docs');
assets  = fullfile(outDir,'assets');
if ~exist(outDir,'dir'),  mkdir(outDir);  end
if ~exist(assets,'dir'),  mkdir(assets);  end
%% --- Prune obsolete pages from a previous build ---
obsolete = ["demo","animation","team","publication","media"];
for k = 1:numel(obsolete)
    f = fullfile(outDir, obsolete(k) + ".html");
    if exist(f,'file'), delete(f); end
end

% ---------- Site settings ----------
site.title      = 'Coastal Hazard Modeling';
site.org        = 'Your Research Group';
site.themeColor = '#0a2540';
site.pages = { ...
  'index','Home'; ...
  'objective','ABOUT'; ...
  'how','HOW TO USE THIS WEBSITE'; ...
  'models','BASIC MODEL INFORMATION'; ...
  'guide','USER GUIDE'; ...
  'sites','SITES'; ...
  'map','USER-INTERACTIVE MAP'; ...
  'website','RELATED WEBSITE' ...
};


% ---------- Logo ----------
site.logo = 'logo.jpg';
if ~exist(fullfile(assets, site.logo),'file')
    warning('Logo file not found: assets/%s', site.logo);
end

% ---------- Shared CSS ----------
cssPath = fullfile(assets,'style.css');
writeCSS(cssPath, site.themeColor);

% ---------- Content ----------
content.index = [ ...
  '<p><strong>Near-real-time modeling of total water levels and coastal change using XBeach and companion models.</strong></p>' ...
  '<p>This site shares model setup, user guides, sites, demos, and animations.</p>' ...
];
content.objective = '<p>Short project overview, goals, and scope.</p>';
content.how       = '<p>Explain navigation, search, and where to find results.</p>';

content.models = htmlList({ ...
  mklink('models_overview.html','Overview of Technology/Methodology'), ...
  mklink('models_xbeach.html','XBEACH') ...
});
content.guide = htmlList({ mklink('guide_xbeach.html','XBEACH USERS GUIDE') });
content.sites = htmlList({ mklink('site_delaware.html','Delaware Coast') });

% NOTE: this page embeds docs/map_embed.html (written by writeLeafletMap)
content.map = [ ...
  '<p>Interactive map of the latest run.</p>' ...
  iframe('map_embed.html?v=2') ...
];

content.website     = '<p>Related projects and resources.</p>';

% ---------- Write main pages ----------
for i = 1:size(site.pages,1)
    slug  = site.pages{i,1};
    title = site.pages{i,2};
    body  = content.(slug);
    writePage(outDir, assets, site, slug, title, body, site.pages);
end

% ---------- Subpages ----------
writeSimplePage(outDir, assets, site, 'models_overview', ...
    'Overview of Technology/Methodology', '<p>High-level comparison of models and when to use each.</p>', site.pages);
writeSimplePage(outDir, assets, site, 'models_xbeach', ...
    'XBEACH', '<p>Shortwave/longwave modes, parameters, morphology switches.</p>', site.pages);
writeSimplePage(outDir, assets, site, 'guide_xbeach', ...
    'XBEACH — User Guide', '<p>Parameter tuning, grids, validation.</p>', site.pages);
writeSimplePage(outDir, assets, site, 'site_delaware', ...
    'Delaware Coast', '<p>Describe locations, transects, and data sources.</p>', site.pages);

% ---------- Map page ----------
writeLeafletMap(outDir, assets);

fprintf('\nDone! Open: %s\n', fullfile(outDir,'index.html'));

% ===== helpers =====
    function writePage(outDir_, assets_, site_, slug, title, body, pages)
        html = sprintf(['<!DOCTYPE html><html lang="en"><head>' ...
          '<meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1">' ...
          '<title>%s — %s</title>' ...
          '<link rel="icon" href="assets/%s">' ...
          '<link rel="stylesheet" href="assets/style.css">' ...
          '</head><body>' ...
          '<header class="site-header"><a class="brand" href="index.html">' ...
          '<img src="assets/%s" alt="Logo"><span>%s</span></a></header>' ...
          '<nav class="top-nav">%s</nav>' ...
          '<main class="container"><aside class="sidebar">%s</aside>' ...
          '<article class="content"><h1>%s</h1>%s</article></main>' ...
          '<footer class="site-footer">&copy; %d %s</footer>' ...
          '</body></html>'], ...
          title, site_.title, site_.logo, site_.logo, site_.title, ...
          topNav(pages, slug), sideNav(pages, slug), ...
          title, body, year(datetime('now')), site_.org);
        fid = fopen(fullfile(outDir_, [slug '.html']),'w'); fwrite(fid, html); fclose(fid);
    end

    function writeSimplePage(outDir_, assets_, site_, slug, title, paragraph, pages)
        writePage(outDir_, assets_, site_, slug, title, paragraph, pages);
    end

    function s = topNav(pages, active)
        items = cell(1,size(pages,1));
        for ii = 1:size(pages,1)
            slug  = pages{ii,1}; label = pages{ii,2};
            if strcmp(slug, active), cls = ' class="active"'; else, cls = ''; end
            items{ii} = sprintf('<a%s href="%s.html">%s</a>', cls, slug, label);
        end
        s = strjoin(items,'');
    end

    function s = sideNav(pages, active)
        items = cell(1,size(pages,1));
        for ii = 1:size(pages,1)
            slug  = pages{ii,1}; label = pages{ii,2};
            if strcmp(slug, active), cls = ' class="active"'; else, cls = ''; end
            items{ii} = sprintf('<div><a%s href="%s.html">%s</a></div>', cls, slug, label);
        end
        s = strjoin(items,'');
    end

    function writeCSS(path, themeColor)
        css = [ ...
':root{--brand ', themeColor, ';--bg:#ffffff;--text:#1f2937;--muted:#6b7280;}', ...
'body{margin:0;font-family:system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,Helvetica,Arial,sans-serif;background:var(--bg);color:var(--text)}', ...
'.site-header{display:flex;align-items:center;gap:.6rem;padding:.8rem 1rem;border-bottom:1px solid #e5e7eb}', ...
'.brand{display:flex;align-items:center;gap:.6rem;color:var(--text);text-decoration:none;font-weight:600}', ...
'.brand img{height:28px}.top-nav{display:flex;gap:.8rem;flex-wrap:wrap;padding:.5rem 1rem;border-bottom:1px solid #e5e7eb}', ...
'.top-nav a{padding:.4rem .6rem;border-radius:.5rem;text-decoration:none;color:var(--text)}', ...
'.top-nav a.active,.top-nav a:hover{background:var(--brand);color:#fff}', ...
'.container{display:grid;grid-template-columns:260px 1fr;gap:1rem;align-items:start;padding:1rem;max-width:1200px;margin:0 auto}', ...
'.sidebar{position:sticky;top:10px;border:1px solid #e5e7eb;padding:1rem;border-radius:.75rem}', ...
'.sidebar a{display:block;color:var(--text);text-decoration:none;margin:.2rem 0}', ...
'.sidebar a.active{font-weight:600}', ...
'.content{padding:1rem 1.2rem;border:1px solid #e5e7eb;border-radius:.75rem}', ...
'img.align-right{float:right;margin:0 0 1rem 1rem;max-width:40%;height:auto}', ...
'.site-footer{padding:1rem;text-align:center;color:var(--muted);border-top:1px solid #e5e7eb;margin-top:2rem}', ...
'.content h1{margin-top:.2rem}' ...
        ];
        fid = fopen(path,'w'); fwrite(fid, css); fclose(fid);
    end

    function s = mklink(href, text_), s = ['<a href="', href, '">', text_, '</a>']; end
    function s = htmlList(items), s  = ['<ul>', strjoin(cellfun(@(x)['<li>',x,'</li>'],items,'uni',0),''), '</ul>']; end
    function s = iframe(src)
        s = ['<div style="border:1px solid #e5e7eb;border-radius:8px;overflow:hidden;height:600px">' ...
             '<iframe src="', src, '" style="width:100%;height:100%;border:0"></iframe></div>'];
    end

%     function writeLeafletMap(outDir_, assets_)
%     % Writes docs/map_embed.html
%     % Loads Leaflet from CDN with a LOCAL fallback (docs/assets/leaflet/*),
%     % fetches assets/geo/latest_run.geojson, and shows large, clickable images.
% 
%     geoDir = fullfile(outDir_, 'assets', 'geo');
%     if ~exist(geoDir, 'dir'), mkdir(geoDir); end
% 
%     html = [
% '<!doctype html>' newline ...
% '<html>' newline ...
% '<head>' newline ...
% '  <meta charset="utf-8" />' newline ...
% '  <meta name="viewport" content="width=device-width, initial-scale=1">' newline ...
% '  <title>Interactive Map</title>' newline ...
% '  <link id="leaflet-css" rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css">' newline ...
% '  <style>' newline ...
% '    html,body{height:100%;margin:0;padding:0}' newline ...
% '    #map{height:100vh}' newline ...
% '    .leaflet-popup-content{max-width:560px !important}' newline ...
% '    .popupimg{max-width:520px;width:100%;display:block;margin-top:6px;border-radius:6px}' newline ...
% '    #err{position:fixed;right:8px;bottom:8px;background:#fee;border:1px solid #f99;border-radius:6px;padding:6px 10px;color:#900;font:13px system-ui}' newline ...
% '  </style>' newline ...
% '</head>' newline ...
% '<body>' newline ...
% '  <div id="map"></div>' newline ...
% '  <div id="err" style="display:none"></div>' newline ...
% '' newline ...
% '  <script>' newline ...
% '  // Simple error helper' newline ...
% '  function showErr(msg){try{var e=document.getElementById("err");e.textContent=msg;e.style.display="block";}catch(_){}}' newline ...
% '' newline ...
% '  // Load Leaflet from CDN, then fall back to local if it fails' newline ...
% '  (function loadLeaflet(){' newline ...
% '    var s=document.createElement("script");' newline ...
% '    s.src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js";' newline ...
% '    s.onload=init;' newline ...
% '    s.onerror=function(){' newline ...
% '      showErr("CDN failed. Using local Leaflet…");' newline ...
% '      var lc=document.getElementById("leaflet-css");' newline ...
% '      if(lc) lc.href="assets/leaflet/leaflet.css";' newline ...
% '      var ls=document.createElement("script");' newline ...
% '      ls.src="assets/leaflet/leaflet.js";' newline ...
% '      ls.onload=init;' newline ...
% '      ls.onerror=function(){showErr("Could not load Leaflet (CDN/local).");};' newline ...
% '      document.body.appendChild(ls);' newline ...
% '    };' newline ...
% '    document.body.appendChild(s);' newline ...
% '  })();' newline ...
% '' newline ...
% '  function init(){' newline ...
% '    if(!(window.L)){showErr("Leaflet not available.");return;}' newline ...
% '    var map=L.map("map").setView([38.9,-75.2],8);' newline ...
% '    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{maxZoom:19,attribution:"© OpenStreetMap"}).addTo(map);' newline ...
% '' newline ...
% '    fetch("assets/geo/latest_run.geojson")' newline ...
% '      .then(function(r){if(!r.ok)throw new Error("latest_run.geojson not found");return r.json();})' newline ...
% '      .then(function(g){' newline ...
% '        L.geoJSON(g,{onEachFeature:function(f,l){' newline ...
% '          var p=f.properties||{};' newline ...
% '          var html="<strong>"+(p.name||"Transect")+"</strong>";' newline ...
% '          if(p.image){' newline ...
% '            var im=String(p.image);' newline ...
% '            html+=`<br><a href="${im}" target="_blank" rel="noopener"><img class="popupimg" src="${im}"></a>`+' newline ...
% '                   `<div style="margin-top:4px"><a href="${im}" target="_blank" rel="noopener">Open full size</a></div>`;' newline ...
% '          }' newline ...
% '          l.bindPopup(html,{maxWidth:560});' newline ...
% '        }}).addTo(map);' newline ...
% '      })' newline ...
% '      .catch(function(e){showErr("GeoJSON error: "+e.message);' newline ...
% '        var m=L.marker([39.1582,-75.5244]).addTo(map);' newline ...
% '        m.bindPopup("Could not load GeoJSON: "+e.message);' newline ...
% '      });' newline ...
% '  }' newline ...
% '  </script>' newline ...
% '</body>' newline ...
% '</html>' newline ...
%     ];
% 
%     fid = fopen(fullfile(outDir_,'map_embed.html'),'w');
%     fwrite(fid, html);
%     fclose(fid);
% end
function writeLeafletMap(outDir_, assets_)
    % Writes docs/map_embed.html
    % - Loads Leaflet from unpkg CDN (reliable on GitHub Pages)
    % - Fetches docs/assets/geo/latest_run.geojson
    % - Renders small numbered markers
    % - Popup shows a larger, clickable image

    geoDir = fullfile(outDir_, 'assets', 'geo');
    if ~exist(geoDir, 'dir'), mkdir(geoDir); end

    lines = {
'<!doctype html><html><head><meta charset="utf-8" />'
'<meta name="viewport" content="width=device-width, initial-scale=1">'
'<title>Interactive Map</title>'
'<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css">'
'<style>'
'  html,body{height:100%;margin:0;padding:0}'
'  #map{height:100vh}'
'  .leaflet-popup-content{max-width:560px !important}'
'  .popupimg{max-width:520px;width:100%;display:block;margin-top:6px;border-radius:6px}'
'  /* tiny numbered marker */'
'  .numMarker{'
'    width:22px;height:22px;'
'    background:#155e75; color:#fff;'
'    border-radius:50%; border:2px solid #fff;'
'    box-shadow:0 1px 3px rgba(0,0,0,.35);'
'    display:flex; align-items:center; justify-content:center;'
'    font: 12px/22px system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;'
'  }'
'</style>'
'</head><body>'
'<div id="map"></div>'
'<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>'
'<script>'
'  const map = L.map("map").setView([38.9,-75.2], 8);'
'  L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{maxZoom:19,attribution:"&copy; OpenStreetMap"}).addTo(map);'
'  fetch("assets/geo/latest_run.geojson")'
'    .then(r => { if(!r.ok) throw new Error("latest_run.geojson not found"); return r.json(); })'
'    .then(g => {'
'      let i = 0;'
'      const layer = L.geoJSON(g, {'
'        pointToLayer: (f, latlng) => {'
'          i++;'
'          const icon = L.divIcon({'
'            className: "numMarker",'
'            html: String(i),'
'            iconSize: [22,22],'
'            iconAnchor: [11,11]'
'          });'
'          return L.marker(latlng, {icon});'
'        },'
'        onEachFeature: (f, l) => {'
'          const p = f.properties || {};'
'          let html = `<strong>${p.name || "Transect"}</strong>`;'
'          if (p.image) {'
'            const im = String(p.image);'
'            html += `<br><a href="${im}" target="_blank" rel="noopener">`'
'                 +  `<img class="popupimg" src="${im}"></a>`'
'                 +  `<div style="margin-top:4px"><a href="${im}" target="_blank" rel="noopener">Open full size</a></div>`;'
'          }'
'          l.bindPopup(html, {maxWidth:560});'
'        }'
'      }).addTo(map);'
'      try { map.fitBounds(layer.getBounds(), {padding:[30,30]}); } catch(e) {}'
'    })'
'    .catch(e => {'
'      L.marker([39.1582,-75.5244]).addTo(map).bindPopup("Could not load GeoJSON: " + e.message);'
'    });'
'</script>'
'</body></html>'
    };

    fid = fopen(fullfile(outDir_,'map_embed.html'),'w');
    fwrite(fid, strjoin(lines,''));
    fclose(fid);
end



end

